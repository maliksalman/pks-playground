apiVersion: v1
kind: ConfigMap
metadata:
  name: kafka-config
data:
  server.properties: |
    num.network.threads=3
    num.io.threads=8
    socket.send.buffer.bytes=102400
    socket.receive.buffer.bytes=102400
    socket.request.max.bytes=10485760
    num.partitions=2
    num.recovery.threads.per.data.dir=1
    offsets.topic.replication.factor=3
    transaction.state.log.replication.factor=3
    transaction.state.log.min.isr=2
    log.retention.hours=168
    log.segment.bytes=10737418
    log.retention.check.interval.ms=300000
    zookeeper.connection.timeout.ms=6000
    group.initial.rebalance.delay.ms=1000
    log.dirs=/var/kafka/data
---
apiVersion: v1
kind: Service
metadata:
  name: kafka-hs
  labels:
    app: kafka
spec:
  ports:
  - name: broker
    targetPort: broker
    port: 9092
  clusterIP: None
  selector:
    app: kafka
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: kafka-pdb
spec:
  selector:
    matchLabels:
      app: kafka
  maxUnavailable: 1
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka
spec:
  selector:
    matchLabels:
      app: kafka
  serviceName: kafka-hs
  replicas: 3
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: OrderedReady
  template:
    metadata:
      labels:
        app: kafka
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: "app"
                    operator: In
                    values:
                    - kafka-hs
              topologyKey: "kubernetes.io/hostname"
      volumes:
      - name: config
        configMap:
          name: kafka-config
      containers:
      - name: kubernetes-kafka
        imagePullPolicy: Always
        image: "maliksalman/kubernetes-kafka:1.0.0"
        resources:
          requests:
            memory: "500Mi"
            cpu: "0.25"
        env:
          - name: NODE_HOSTNAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
        ports:
        - containerPort: 9092
          name: broker
        readinessProbe:
          tcpSocket:
            port: 9092
          initialDelaySeconds: 10
          timeoutSeconds: 5
        livenessProbe:
          tcpSocket:
            port: 9092
          initialDelaySeconds: 10
          timeoutSeconds: 5
        volumeMounts:
        - name: logdir
          mountPath: /var/kafka
        - name: config
          mountPath: /usr/etc/kafka
          readOnly: true
  volumeClaimTemplates:
  - metadata:
      name: logdir
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 100Mi